{{ 'component-main-collection.css' | asset_url | stylesheet_tag: preload: true }}

{% style %}
    #shopify-section-{{ section.id }}{
    padding-top: {{ section.settings.padding_top }}px;
    padding-bottom: {{ section.settings.padding_bottom }}px;
  }

  @media (max-width:768px){
    #shopify-section-{{ section.id }}{
      padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
    }
  }
  
{% endstyle %}

{% assign filters_order = section.settings.group_filter_prefix %}
{% assign pricerange_order = section.settings.price_filter_index %}

<div data-section-id="{{ section.id }}" data-section-type="collection-template">
  {% paginate collection.products by section.settings.pagination %}
    {%- liquid
      assign sort_by = collection.sort_by | default: collection.default_sort_by

      assign results = collection
      assign clear_url = collection.url
      assign show_filters = section.settings.enable_filtering
      if collection.filters == empty
        assign show_filters = false
      endif
    -%}
    {%- render 'col-banner', section: section, collection: collection -%}
    <div class="container">
        {%- render 'breadcrumbs' -%}
      <div class="filter-container {% if results.products.size == 0 %}hidden{% endif %}">
        <div class="utility-bar">
          {% if show_filters %}
            <div class="utility-bar__left">
              <button
                class="toggle-btn utility-bar__item {% if section.settings.default_open == false %}active{% endif %}{% if show_filters == false %} desk-hide-flex{% endif %}"
                data-toggle-filters
                id="filterTrigger"
              >
                <span class="button-icon">
                  {% render 'icons', icon: 'filter' %}
                </span>
                <span>{{ 'collection.facets.filter_by_label' | t }}</span>
                {% liquid
                  assign filter_count = 0
                  for filter in collection.filters
                    assign filter_count = filter_count | plus: filter.active_values.size
                    if filter.type == 'price_range'
                      if filter.min_value.value != null or filter.max_value.value != null
                        assign filter_count = filter_count | plus: 1
                      endif
                    endif
                  endfor
                %}
                {% if filter_count > 0 %}
                  <span class="toggle-btn__count">({{ filter_count }})</span>
                {% endif %}
              </button>
            </div>
          {% endif %}
          <div class="utility-bar__right">
            <div class="prod-count-sortby d-flex">
              {% if section.settings.product_count %}
             <p tabindex='0' aria-label="{{ 'collection.facets.product_counts' | t: product_count: collection.products_counts, count: collection.all_products_count }}" class="product-count  mobile-hide" data-initial-count="{{ collection.all_products_count }}">
                  {{
                    'collection.facets.product_counts'
                    | t: product_count: collection.products_counts, count: collection.all_products_count
                  }}
                </p>
              {% endif %}
              <div class="showprod-column d-flex mobile-hide">
                <div
                  tabindex="0"
                  aria-label="listview"
                  grid-layout="listview"
                  class="list-view prod-column-change {% if section.settings.product_per_row == 1 %}activeGrid{% endif %}" tabindex="0"
                >
                  {% render 'icons', icon: 'list-view' %}
                </div>
                <div
                    tabindex="0"
                  aria-label="grid view 2"
                  grid-layout="2"
                  class="twoproduct-view prod-column-change {% if section.settings.product_per_row == 2 %}activeGrid{% endif %}" tabindex="0"
                >
                  {% render 'icons', icon: 'two-cloumn' %}
                </div>
                <div
                   tabindex="0"
                  aria-label="grid view 3"
                  grid-layout="3"
                  class="threeproduct-view prod-column-change {% if section.settings.product_per_row == 3 %}activeGrid{% endif %}" tabindex="0"
                >
                  {% render 'icons', icon: 'three-cloumn' %}
                </div>
                <div
                   tabindex="0"
                  aria-label="grid view 4"
                  grid-layout="4"
                  class="fourproduct-view prod-column-change {% if section.settings.product_per_row == 4 %}activeGrid{% endif %}" tabindex="0"
                >
                  {% render 'icons', icon: 'four-column' %}
                </div>
              </div>
            </div>
            {% if section.settings.enable_sorting and collection.products.size > 0 %}
              <facet-filters>
                <div class="utility-bar__item">
                  <form class="facets-vertical-form" id="FacetSortForm">
                    <div class="facet-filters sorting">
                      <div class="facet-filters__field">
                        <div class="sortbycontent">
                          {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
                          {% for option in results.sort_options %}
                            {%- if option.value == sort_by -%}
                              {%- assign collection_sort_by_name = option.name -%}
                              {%- break -%}
                            {%- endif -%}
                          {% endfor %}
                           <div tabindex="0" aria-label="{{- 'collection.facets.sort_by_label' | t -}}" class="sortby-header">
                              <span class="sortby-header-title">
                              {{- 'collection.facets.sort_by_label' | t -}}<span class="mobile-hide">:</span>
                              <span tabindex="0" aria-label="{{ collection_sort_by_name }}" class="sortby-page mobile-hide">{{ collection_sort_by_name }} </span>
                            </span>
                            {% render 'icons', icon: 'chevron-down' %}
                          </div>
                          <div class="facet-filters__sort select__select sortby-content" id="SortBy">
                            {%- for option in results.sort_options %}
                              <button
                                name="sort_by"
                                class="sortby-value {%- if option.value == sort_by %} activeOption {%- endif %}"
                                value="{{ option.value }}"
                              >
                                {{ option.name }}
                              </button>
                            {% endfor -%}
                          </div>
                        </div>
                      </div>
                    </div>
                    <noscript>
                      <button type="submit" class="filter-submit btn btn-primary">
                        {{ 'collection.facets.sort_button' | t }}
                      </button>
                    </noscript>
                  </form>
                </div>
              </facet-filters>
            {% endif %}
          </div>
        </div>
      </div>
      <div class="collection-wrapper filter-container--side">
        {%- if collection.products.size > 0 -%}
          {% render 'facet-filters', results: collection, enable_filtering: section.settings.enable_filtering,filter_order:filters_order,pricerange_order:pricerange_order %}
        {%- endif -%}
        <div class="collection-grid-wrapper" id="ProductCardContainer">
          {% capture active_filters_html %}
            {%- if section.settings.enable_filtering and results.filters != empty -%}
              <div class="filter-group filter-group--applied">
                <div class="filter-group__items">
                  {%- for filter in results.filters -%}
                    {%- for value in filter.active_values -%}
                      <div class="filter-group__applied-item">
                        <span class="filter-group__applied-item__text">{{ value.label | escape }}</span>
                        <a href="{{ value.url_to_remove }}">
                          <span class="visually-hidden">{{ 'accessibility.close' | t }}</span>
                          <span class="filter-group__applied-item__icon">{%- render 'icons', icon: 'close-small' -%}</span>
                        </a>
                      </div>
                    {%- endfor -%}
                    {%- if filter.type == 'price_range' -%}
                      {%- if filter.min_value.value != nil or filter.max_value.value != nil -%}
                        <a class="filter-group__applied-item" href="{{ filter.url_to_remove }}">
                          <span class="filter-group__applied-item__text">
                            {% if filter.min_value.value %}{{ filter.min_value.value | money }}{%- else -%}{{ 0 | money }}{% endif %} - {% if filter.max_value.value %}{{ filter.max_value.value | money }}{%- else -%}{{ filter.range_max | money }}{% endif %}
                          </span>
                          <span class="filter-group__applied-item__icon">{%- render 'icons', icon: 'close-small' -%}</span>
                        </a>
                      {%- endif -%}
                    {%- endif -%}
                  {%- endfor -%}
                  <div class="filter-group__clear-row">
                    <a class="filter-group__clear-link" href="{{ clear_url }}">{{ 'collection.facets.clear_filter' | t }}</a>
                  </div>
                </div>
              </div>
            {%- endif -%}
          {% endcapture %}
          {%- if active_filters_html contains 'filter-group__applied-item' -%}
            {{ active_filters_html }}
          {%- endif -%}

          <div class="quick-view__closest collection-grid grid-{{ section.settings.product_per_row }}-column-desk"
            {% if section.settings.product_per_row == 1 %}
              data-grid-column="listview"
            {% else %}
              data-grid-column="{{ section.settings.product_per_row }}"
            {% endif %}
            data-grid-column="{{ section.settings.product_per_row }}"
            {% if settings.enable_infinite_scroll == true %}
              data-next-page="{{ paginate.next.url }}"
            {% endif %}
            {% if settings.enable_infinite_scroll == true %}
              data-next-page="{{ paginate.next.url }}"
            {% endif %}
          >
            {%- if collection.products.size > 0 -%}
              {%- for product in collection.products -%}
                {%- render 'product-card',
                  product: product,
                  index: forloop.index,
                  show_img_onhover: true,
                  show_swatches: settings.color_swatches
                -%}
              {%- endfor -%}
              {%- render 'quickView-modal' -%}
            {%- else -%}
              <div class="no-results">
                <h3>
                  <strong>{{ 'collection.general.no_matches' | t }}</strong>
                </h3>
              </div>
            {%- endif -%}
            {%- if settings.enable_infinite_scroll == false -%}
              <div class="container pagination-row">{%- render 'pagination', paginate: paginate -%}</div>
            {%- endif -%}
            <noscript class="w-100">
              <div class="container pagination-row">{%- render 'pagination', paginate: paginate -%}</div>
            </noscript>
          </div>
          {%- if settings.enable_infinite_scroll == true -%}
            <div class="pagination-loader">
              {%- render 'icons', icon: 'loader' -%}
            </div>
          {%- endif -%}
        </div>
      </div>
    </div>
  {% endpaginate %}
  <div class="page-loader" style="display:none;">
    {%- render 'icons', icon: 'loader' -%}
  </div>
</div>



{% schema %}
{
  "name": "t:sections.collection.name",
  "class": "section-main-collection",
  "tag": "section",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.collection.settings.banner_content.content"
    },
    {
      "type": "select",
      "id": "desk_content_position",
      "options": [
        {
          "value": "top-left",
          "label": "t:sections.general.alignment.alignment_top_left.label" 
        },
        {
          "value": "top-center",
          "label": "t:sections.general.alignment.alignment_top_center.label"
        },
        {
          "value": "top-right",
          "label": "t:sections.general.alignment.alignment_top_right.label"
        },
        {
          "value": "middle-left",
          "label": "t:sections.general.alignment.alignment_middle_left.label"
        },
        {
          "value": "middle-center",
          "label": "t:sections.general.alignment.alignment_middle_center.label"
        },
        {
          "value": "middle-right",
          "label": "t:sections.general.alignment.alignment_middle_right.label"
        },
        {
          "value": "bottom-left",
         "label": "t:sections.general.alignment.alignment_bottom_left.label"
        },
        {
          "value": "bottom-center",
          "label": "t:sections.general.alignment.alignment_bottom_center.label"
        },
        {
          "value": "bottom-right",
          "label": "t:sections.general.alignment.alignment_bottom_right.label"
        }
      ],
      "default": "middle-center",
      "label": "t:sections.collection.settings.banner_content.desk_content_position.label",
      "info": "t:sections.collection.settings.banner_content.desk_content_position.info"
    },
    {
      "type": "select",
      "id": "desk_content_align",
      "options": [
        {
          "value": "left",
          "label": "t:sections.general.alignment.alignment_left.label"
        },
        {
          "value": "center",
          "label": "t:sections.general.alignment.alignment_center.label"
        },
        {
          "value": "right",
          "label": "t:sections.general.alignment.alignment_right.label"
        }
      ],
      "default": "center",
      "label": "t:sections.collection.settings.banner_content.desk_content_align.label"
    },
    {
      "type": "select",
      "id": "mob_content_align",
      "options": [
        {
          "value": "left",
          "label": "t:sections.general.alignment.alignment_left.label"
        },
        {
          "value": "center",
          "label": "t:sections.general.alignment.alignment_center.label"
        },
        {
          "value": "right",
          "label": "t:sections.general.alignment.alignment_right.label"
        }
      ],
      "default": "center",
      "label": "t:sections.collection.settings.banner_content.mobile_content_align.label"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "label": "t:sections.collection.settings.show_filters.label",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "label": "t:sections.collection.settings.show_sorting.label",
      "default": true
    },
    {
      "type": "link_list",
      "id": "filter_link",
      "label": "t:sections.collection.settings.navigation_filter.label"
    },
    {
      "type": "text",
      "id": "col_title",
      "label": "t:sections.collection.settings.navigation_filter_title.label",
      "default": "Collection"
    },
    {
      "type": "text",
      "id": "group_filter_prefix",
      "label": "t:sections.collection.settings.group_filter_prefix.label",
      "default": "color,size,material"
    },
    {
      "type": "checkbox",
      "id": "default_open",
      "label": "t:sections.collection.settings.filter_open.label",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "product_count",
      "label": "t:sections.collection.settings.show_product_count.label",
      "default": true
    },
    {
      "type": "range",
      "id": "product_per_row",
      "min": 1,
      "max": 4,
      "step": 1,
      "default": 4,
      "label": "t:sections.collection.settings.product_per_row.label"
    },
    {
      "type": "range",
      "id": "spacing",
      "min": 5,
      "max": 30,
      "step": 1,
      "default": 25,
      "label": "t:sections.collection.settings.gap_between_products.label"
    },
    {
      "type": "range",
      "id": "pagination",
      "label": "t:sections.collection.settings.show_products_in_page.label",
      "min": 8,
      "max": 40,
      "step": 1,
      "default": 12
    },
    {
      "type": "header",
      "content": "t:sections.collection.settings.banner.content"
    },
    {
      "type": "paragraph",
      "content": "t:sections.collection.settings.banner.info_1"
    },
    {
      "type": "paragraph",
      "content": "t:sections.collection.settings.banner.info_2"
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "t:sections.collection.settings.banner.image.label",
      "info": "t:sections.collection.settings.banner.image.info"
    },
    {
      "type": "checkbox",
      "id": "show_title",
      "default": true,
      "label": "t:sections.collection.settings.banner.image.show_title"
    },
    {
      "type": "checkbox",
      "id": "show_description",
      "default": true,
      "label": "t:sections.collection.settings.banner.image.show_description"
    },
    {
      "type": "paragraph",
      "content": "t:sections.collection.settings.customization.content"
    },
    {
      "type": "select",
      "id": "image_height",
      "label": "t:sections.collection.settings.customization.image_height.label",
      "options": [
        {
          "value": "small",
          "label": "t:sections.collection.settings.customization.image_height.options.small_height"
        },
        {
          "value": "medium",
          "label": "t:sections.collection.settings.customization.image_height.options.medium_height"
        },
        {
          "value": "large",
          "label": "t:sections.collection.settings.customization.image_height.options.large_height"
        },
        {
          "value": "original",
          "label": "t:sections.collection.settings.customization.image_height.options.original_height"
        }
      ],
      "default": "medium"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "t:sections.general.full_width",
      "default": true
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "t:sections.general.color.heading_color.label",
      "default": "#FFF"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "t:sections.general.color.text_color.label",
      "default": "#FFF"
    },
    {
      "type": "color",
      "id": "overlay_color",
      "label": "t:sections.general.color.overlay_color.label",
      "default": "#000"
    },
    {
      "type": "range",
      "id": "overlay_opacity",
      "label": "t:sections.collection.settings.customization.overlay_opacity.label",
      "min": 0,
      "max": 1,
      "step": 0.1,
      "unit": "%",
      "default": 0.4
    },
    {
      "type": "header",
      "content": "t:sections.general.section_vertical_spacing.content"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.general.section_vertical_spacing.top_padding.label",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.general.section_vertical_spacing.bottom_padding.label",
      "default": 40
    },
    {
      "type": "paragraph",
      "content": "t:sections.collection.settings.customization.image_overlay.content"
    },
    {
      "type": "color",
      "id": "gradient_color",
      "label": "t:sections.collection.settings.customization.image_overlay.gradient_color.label",
      "default": "#FBF5F0"
    },
    {
      "type": "range",
      "id": "start_gradient_opacity",
      "label": "t:sections.collection.settings.customization.image_overlay.start_color_opacity.label",
      "default": 0,
      "min": 0,
      "max": 1,
      "step": 0.1
    },
    {
      "type": "range",
      "id": "end_gradient_opacity",
      "label": "t:sections.collection.settings.customization.image_overlay.end_color_opacity.label",
      "default": 1,
      "min": 0,
      "max": 1,
      "step": 0.1
    },
    {
      "type": "header",
      "content": "t:sections.general.heading.label"
    },
    {
      "type": "text",
      "id": "heading_text",
      "label": "t:sections.general.heading.label"
    },
    {
      "type": "select",
      "id": "heading_size",
      "label": "t:sections.general.font_size.content",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.general.font_size.large_size.label"
        },
        {
          "value": "h3",
          "label": "t:sections.general.font_size.medium_size.label" 
        },
        {
          "value": "h4",
          "label": "t:sections.general.font_size.small_size.label"
        }
      ],
      "default": "h2"
    },
    {
      "type": "richtext",
      "id": "content_text",
      "label": "t:sections.collection.settings.header.content"
    },
    {
      "type": "select",
      "id": "content_alignment",
      "label": "t:sections.general.alignment.content",
      "options": [
        {
          "value": "left",
          "label": "t:sections.general.alignment.alignment_left.label"
        },
        {
          "value": "center",
          "label": "t:sections.general.alignment.alignment_center.label"
        },
        {
          "value": "right",
          "label": "t:sections.general.alignment.alignment_right.label"
        }
      ],
      "default": "center"
    }
  ]
}
{% endschema %}
